@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            
                @if (User.IsInRole("user"))
                {
                    <li>
                        @Html.ActionLink("Edit info", "Edit", "User", routeValues: null,
                            htmlAttributes: new { title = "Manage" })
                    </li>
                }
                @if (User.IsInRole("manager"))
                {
                    <li>
                        @Html.ActionLink("Manage teams", "Teams", "TeamUp", routeValues: null,
                            htmlAttributes: new {title = "Manage"})
                    </li>
                    <li>
                        @Html.ActionLink("Assign users", "Index", "TeamUp", routeValues: null,
                            htmlAttributes: new { title = "Manage" })
                    </li>
                }
                @if (User.IsInRole("admin"))
                {
                    <li>
                        @Html.ActionLink("Manage roles", "ManageUsers", "Account", routeValues: null,
                            htmlAttributes: new {title = "Manage"})
                    </li>
                    <li>
                        @Html.ActionLink("Manage skills", "Index", "EditSkills", routeValues: null,
                            htmlAttributes: new { title = "Manage" })
                    </li>
                }
            

            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
